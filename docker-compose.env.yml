version: "3.8"

services:
  redis:
    image: redis:8
    container_name: redis
    restart: unless-stopped
    volumes:
      - ${HOME}/workspace/docker/dev-db/redis/data:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 2s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: mysql8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
    ports:
      - "3307:3306"
    volumes:
      - ${HOME}/workspace/docker/dev-db/mysql8:/var/lib/mysql
      - ./doc/sql:/docker-entrypoint-initdb.d
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p123456" ]
      interval: 5s
      timeout: 10s
      retries: 10

  nacos:
    image: nacos/nacos-server:v2.4.3
    container_name: nacos
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_DB_NAME: nacos_config
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
      JVM_XMS: 256m
      JVM_XMX: 256m
      TZ: Asia/Shanghai
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    volumes:
      - ${HOME}/logs/nacos:/home/nacos/logs
      - ./doc/nacos:/home/nacos/init.d
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8848/nacos/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 10

  sentinel:
    image: bladex/sentinel-dashboard:1.8.8
    container_name: sentinel
    restart: unless-stopped
    ports:
      - "8858:8858"
    environment:
      - SERVER_PORT=8858
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8858" ]
      interval: 10s
      timeout: 10s
      retries: 10

  seata:
    image: seataio/seata-server:2.0.0
    container_name: seata
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      nacos:
        condition: service_healthy
    environment:
      - SEATA_IP=192.168.64.1 # 填写你宿主机的IP
      - SEATA_PORT=8091
      - STORE_MODE=db
    ports:
      - "8091:8091"
    volumes:
      - ${HOME}/logs/seata:/root/logs/seata
      - ./doc/seata/resources:/seata-server/resources

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:3.1.1
    container_name: xxl-job-admin
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      PARAMS: >-
        --server.port=8080
        --spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        --spring.datasource.username=root
        --spring.datasource.password=123456

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin     # 默认用户名
      RABBITMQ_DEFAULT_PASS: 123456    # 默认密码
    ports:
      - "5672:5672"   # AMQP 协议端口
      - "15672:15672" # 管理界面 Web UI
    volumes:
      - ${HOME}/workspace/docker/dev-db/rabbitmq/data:/var/lib/rabbitmq
      - ${HOME}/workspace/docker/dev-db/rabbitmq/log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5